class ComponentConfiguration {
    /**
     * @type {boolean}
     */
    dontConfigEventsOnError;
    /**
     * @type {boolean}
     */
    dontAutoInitialize;
    /**
     * @type {boolean}
     */
    dontReloadFromState;
    /**
     * @type {boolean}
     */
    clearChildrenOnReset;
    /**
     * @type {boolean}
     */
    updateViewOnce;
    /**
     * @type {boolean}
     */
    skipOwnViewUpdates;
    /**
     * @type {string}
     */
    childProperty;

    /**
     * autogenerated from properties
     *
     * @param dontConfigEventsOnError
     * @param dontAutoInitialize
     * @param dontReloadFromState
     * @param clearChildrenOnReset
     * @param updateViewOnce
     * @param skipOwnViewUpdates
     * @param childProperty
     */
    constructor({
                    dontConfigEventsOnError,
                    dontAutoInitialize,
                    dontReloadFromState,
                    clearChildrenOnReset,
                    updateViewOnce,
                    skipOwnViewUpdates,
                    childProperty
                } = {}) {
        this.dontConfigEventsOnError = dontConfigEventsOnError;
        this.dontAutoInitialize = dontAutoInitialize;
        this.dontReloadFromState = dontReloadFromState;
        this.clearChildrenOnReset = clearChildrenOnReset;
        this.updateViewOnce = updateViewOnce;
        this.skipOwnViewUpdates = skipOwnViewUpdates;
        this.childProperty = childProperty;
    }

    static configOf(elemIdOrJQuery, ...sources) {
        // return _.defaults(new ComponentConfiguration(), ...sources, DomUtils.dataOf(elemIdOrJQuery));
        return _.defaultsAll([new ComponentConfiguration(), ...sources, DomUtils.dataOf(elemIdOrJQuery)]);
    }
}